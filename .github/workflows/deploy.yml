name: Deploy (principal-isi)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-principal-isi
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: [ self-hosted, linux, principal-isi ]
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Verifica que el runner pueda hablar con Docker (daemon)
      - name: Chequeo acceso a Docker
        shell: bash
        run: |
          set -euo pipefail
          docker info >/dev/null

      # Prechequeos: estructura y archivos mínimos en el repo
      - name: Prechequeos en repo
        shell: bash
        run: |
          set -euo pipefail
          test -f principal-isi/app/Dockerfile       || { echo "Falta principal-isi/app/Dockerfile"; exit 1; }
          test -f principal-isi/app/requirements.txt || { echo "Falta principal-isi/app/requirements.txt"; exit 1; }
          test -f principal-isi/app/main.py          || { echo "Falta principal-isi/app/main.py"; exit 1; }

      # Sincroniza TODO el repo del principal a /srv/pln/principal-isi/
      # (así siempre existe /srv/pln/principal-isi/app como context de build)
      - name: Sincronizar código del principal
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p /srv/pln/principal-isi
          rsync -av --delete ./ /srv/pln/principal-isi/
          # Comprobación dura antes de build
          test -d /srv/pln/principal-isi/principal-isi/app || { echo "No existe /srv/pln/principal-isi/principal-isi/app tras sync"; exit 1; }
          ls -lah /srv/pln/principal-isi/principal-isi/app

      # Build + Up SOLO del servicio principal-isi, desde /srv/pln
      - name: Build + Up (solo principal-isi)
        shell: bash
        run: |
          set -euo pipefail
          cd /srv/pln
          # Muestra la sección efectiva del servicio (depura rutas)
          docker compose config | sed -n '/principal-isi:/,/^[^ ]/p'
          docker compose build principal-isi
          docker compose up -d principal-isi
          docker compose ps principal-isi
          docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}' | grep principal-isi || true

      # Smoke test: /health (si aún no lo tienes, cambia a "/")
      - name: Smoke test principal-isi
        shell: bash
        run: |
          set -euo pipefail
          URL="http://localhost:9090/health"
          for i in {1..20}; do
            if curl -fsS "$URL" >/dev/null; then
              echo "OK principal-isi"; exit 0
            fi
            echo "Intento $i: esperando principal-isi..."
            sleep 2
          done
          echo "No respondió $URL, logs:"
          cd /srv/pln && docker compose logs --tail=200 principal-isi || true
          exit 1

      - name: Logs en fallo (always)
        if: ${{ failure() }}
        shell: bash
        run: |
          set -euo pipefail
          cd /srv/pln
          docker compose ps principal-isi || true
          docker compose logs --tail=200 principal-isi || true
